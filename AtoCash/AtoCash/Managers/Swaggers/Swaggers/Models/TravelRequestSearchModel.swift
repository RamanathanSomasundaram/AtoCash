//
// TravelRequestSearchModel.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct TravelRequestSearchModel: Codable {

    public var _id: Int?
    public var employeeId: Int?
    public var employeeName: String?
    public var travelApprovalRequestId: Int?
    public var travelStartDate: Date?
    public var travelEndDate: Date?
    public var travelPurpose: String?
    public var departmentId: Int?
    public var department: String?
    public var projectId: Int?
    public var project: String?
    public var subProject: String?
    public var subProjectId: Int?
    public var workTask: String?
    public var workTaskId: Int?
    public var reqRaisedDate: Date?
    public var costCenterId: Int?
    public var costCenter: String?
    public var approvalStatusTypeId: Int?
    public var approvalStatusType: String?
    public var isManager: Bool?

    public init(_id: Int? = nil, employeeId: Int? = nil, employeeName: String? = nil, travelApprovalRequestId: Int? = nil, travelStartDate: Date? = nil, travelEndDate: Date? = nil, travelPurpose: String? = nil, departmentId: Int? = nil, department: String? = nil, projectId: Int? = nil, project: String? = nil, subProject: String? = nil, subProjectId: Int? = nil, workTask: String? = nil, workTaskId: Int? = nil, reqRaisedDate: Date? = nil, costCenterId: Int? = nil, costCenter: String? = nil, approvalStatusTypeId: Int? = nil, approvalStatusType: String? = nil, isManager: Bool? = nil) {
        self._id = _id
        self.employeeId = employeeId
        self.employeeName = employeeName
        self.travelApprovalRequestId = travelApprovalRequestId
        self.travelStartDate = travelStartDate
        self.travelEndDate = travelEndDate
        self.travelPurpose = travelPurpose
        self.departmentId = departmentId
        self.department = department
        self.projectId = projectId
        self.project = project
        self.subProject = subProject
        self.subProjectId = subProjectId
        self.workTask = workTask
        self.workTaskId = workTaskId
        self.reqRaisedDate = reqRaisedDate
        self.costCenterId = costCenterId
        self.costCenter = costCenter
        self.approvalStatusTypeId = approvalStatusTypeId
        self.approvalStatusType = approvalStatusType
        self.isManager = isManager
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case employeeId = "empId"
        case employeeName
        case travelApprovalRequestId
        case travelStartDate
        case travelEndDate
        case travelPurpose
        case departmentId
        case department
        case projectId
        case project
        case subProject
        case subProjectId
        case workTask
        case workTaskId
        case reqRaisedDate
        case costCenterId
        case costCenter
        case approvalStatusTypeId
        case approvalStatusType
        case isManager
    }

}
