//
// TravelApprovalStatusTracker.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct TravelApprovalStatusTracker: Codable {

    public var _id: Int?
    public var employee: Employee
    public var employeeId: Int?
    public var travelApprovalRequest: TravelApprovalRequest?
    public var travelApprovalRequestId: Int?
    public var travelStartDate: Date?
    public var travelEndDate: Date?
    public var department: Department?
    public var departmentId: Int?
    public var projManager: Employee?
    public var projManagerId: Int?
    public var project: Project?
    public var projectId: Int?
    public var subProject: SubProject?
    public var subProjectId: Int?
    public var workTask: WorkTask?
    public var workTaskId: Int?
    public var approvalGroupId: Int
    public var role: JobRole
    public var roleId: Int?
    public var approvalLevel: ApprovalLevel
    public var approvalLevelId: Int?
    public var reqDate: Date
    public var finalApprovedDate: Date?
    public var approvalStatusType: ApprovalStatusType
    public var approvalStatusTypeId: Int?
    public var comments: String?

    public init(_id: Int? = nil, employee: Employee, employeeId: Int? = nil, travelApprovalRequest: TravelApprovalRequest? = nil, travelApprovalRequestId: Int? = nil, travelStartDate: Date? = nil, travelEndDate: Date? = nil, department: Department? = nil, departmentId: Int? = nil, projManager: Employee? = nil, projManagerId: Int? = nil, project: Project? = nil, projectId: Int? = nil, subProject: SubProject? = nil, subProjectId: Int? = nil, workTask: WorkTask? = nil, workTaskId: Int? = nil, approvalGroupId: Int, role: JobRole, roleId: Int? = nil, approvalLevel: ApprovalLevel, approvalLevelId: Int? = nil, reqDate: Date, finalApprovedDate: Date? = nil, approvalStatusType: ApprovalStatusType, approvalStatusTypeId: Int? = nil, comments: String? = nil) {
        self._id = _id
        self.employee = employee
        self.employeeId = employeeId
        self.travelApprovalRequest = travelApprovalRequest
        self.travelApprovalRequestId = travelApprovalRequestId
        self.travelStartDate = travelStartDate
        self.travelEndDate = travelEndDate
        self.department = department
        self.departmentId = departmentId
        self.projManager = projManager
        self.projManagerId = projManagerId
        self.project = project
        self.projectId = projectId
        self.subProject = subProject
        self.subProjectId = subProjectId
        self.workTask = workTask
        self.workTaskId = workTaskId
        self.approvalGroupId = approvalGroupId
        self.role = role
        self.roleId = roleId
        self.approvalLevel = approvalLevel
        self.approvalLevelId = approvalLevelId
        self.reqDate = reqDate
        self.finalApprovedDate = finalApprovedDate
        self.approvalStatusType = approvalStatusType
        self.approvalStatusTypeId = approvalStatusTypeId
        self.comments = comments
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case employee
        case employeeId
        case travelApprovalRequest
        case travelApprovalRequestId
        case travelStartDate
        case travelEndDate
        case department
        case departmentId
        case projManager
        case projManagerId
        case project
        case projectId
        case subProject
        case subProjectId
        case workTask
        case workTaskId
        case approvalGroupId
        case role
        case roleId
        case approvalLevel
        case approvalLevelId
        case reqDate
        case finalApprovedDate
        case approvalStatusType
        case approvalStatusTypeId
        case comments
    }

}
