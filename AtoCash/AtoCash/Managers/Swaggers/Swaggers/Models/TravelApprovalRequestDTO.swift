//
// TravelApprovalRequestDTO.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



public struct TravelApprovalRequestDTO: Codable {

    public var _id: Int?
    public var employeeId: Int?
    public var employeeName: String?
    public var travelStartDate: Date?
    public var travelEndDate: Date?
    public var travelPurpose: String?
    public var reqRaisedDate: Date?
    public var department: String?
    public var departmentId: Int?
    public var projectId: Int?
    public var project: String?
    public var subProjectId: Int?
    public var subProject: String?
    public var workTaskId: Int?
    public var workTask: String?
    public var costCenterId: Int?
    public var costCenter: String?
    public var approvalStatusTypeId: Int?
    public var approvalStatusType: String?
    public var approvedDate: Date?
    public var showEditDelete: Bool?
    public var comments: String?

    public init(_id: Int? = nil, employeeId: Int? = nil, employeeName: String? = nil, travelStartDate: Date? = nil, travelEndDate: Date? = nil, travelPurpose: String? = nil, reqRaisedDate: Date? = nil, department: String? = nil, departmentId: Int? = nil, projectId: Int? = nil, project: String? = nil, subProjectId: Int? = nil, subProject: String? = nil, workTaskId: Int? = nil, workTask: String? = nil, costCenterId: Int? = nil, costCenter: String? = nil, approvalStatusTypeId: Int? = nil, approvalStatusType: String? = nil, approvedDate: Date? = nil, showEditDelete: Bool? = nil, comments: String? = nil) {
        self._id = _id
        self.employeeId = employeeId
        self.employeeName = employeeName
        self.travelStartDate = travelStartDate
        self.travelEndDate = travelEndDate
        self.travelPurpose = travelPurpose
        self.reqRaisedDate = reqRaisedDate
        self.department = department
        self.departmentId = departmentId
        self.projectId = projectId
        self.project = project
        self.subProjectId = subProjectId
        self.subProject = subProject
        self.workTaskId = workTaskId
        self.workTask = workTask
        self.costCenterId = costCenterId
        self.costCenter = costCenter
        self.approvalStatusTypeId = approvalStatusTypeId
        self.approvalStatusType = approvalStatusType
        self.approvedDate = approvedDate
        self.showEditDelete = showEditDelete
        self.comments = comments
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case employeeId
        case employeeName
        case travelStartDate
        case travelEndDate
        case travelPurpose
        case reqRaisedDate
        case department
        case departmentId
        case projectId
        case project
        case subProjectId
        case subProject
        case workTaskId
        case workTask
        case costCenterId
        case costCenter
        case approvalStatusTypeId
        case approvalStatusType
        case approvedDate
        case showEditDelete
        case comments
    }

}
public struct TravelApprovalReportDTO: Codable {

    public var _id: Int?
    public var employeeId: Int?
    public var employeeName: String?
    public var travelStartDate: Date?
    public var travelEndDate: Date?
    public var travelPurpose: String?
    public var reqRaisedDate: Date?
    public var department: String?
    public var departmentId: Int?
    public var projectId: Int?
    public var project: String?
    public var subProjectId: Int?
    public var subProject: String?
    public var workTaskId: Int?
    public var workTask: String?
    public var costCenterId: Int?
    public var costCenter: String?
    public var approvalStatusTypeId: Int?
    public var approvalStatusType: String?
    public var approvedDate: Date?
    public var showEditDelete: Bool?
    public var comments: String?

    public init(_id: Int? = nil, employeeId: Int? = nil, employeeName: String? = nil, travelStartDate: Date? = nil, travelEndDate: Date? = nil, travelPurpose: String? = nil, reqRaisedDate: Date? = nil, department: String? = nil, departmentId: Int? = nil, projectId: Int? = nil, project: String? = nil, subProjectId: Int? = nil, subProject: String? = nil, workTaskId: Int? = nil, workTask: String? = nil, costCenterId: Int? = nil, costCenter: String? = nil, approvalStatusTypeId: Int? = nil, approvalStatusType: String? = nil, approvedDate: Date? = nil, showEditDelete: Bool? = nil, comments: String? = nil) {
        self._id = _id
        self.employeeId = employeeId
        self.employeeName = employeeName
        self.travelStartDate = travelStartDate
        self.travelEndDate = travelEndDate
        self.travelPurpose = travelPurpose
        self.reqRaisedDate = reqRaisedDate
        self.department = department
        self.departmentId = departmentId
        self.projectId = projectId
        self.project = project
        self.subProjectId = subProjectId
        self.subProject = subProject
        self.workTaskId = workTaskId
        self.workTask = workTask
        self.costCenterId = costCenterId
        self.costCenter = costCenter
        self.approvalStatusTypeId = approvalStatusTypeId
        self.approvalStatusType = approvalStatusType
        self.approvedDate = approvedDate
        self.showEditDelete = showEditDelete
        self.comments = comments
    }

    public enum CodingKeys: String, CodingKey {
        case _id = "id"
        case employeeId
        case employeeName
        case travelStartDate
        case travelEndDate
        case travelPurpose
        case reqRaisedDate
        case department = "departmentName"
        case departmentId
        case projectId
        case project = "projectName"
        case subProjectId
        case subProject
        case workTaskId
        case workTask
        case costCenterId
        case costCenter
        case approvalStatusTypeId
        case approvalStatusType
        case approvedDate
        case showEditDelete
        case comments
    }

}
