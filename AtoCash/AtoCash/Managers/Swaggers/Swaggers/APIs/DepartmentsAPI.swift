//
// DepartmentsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class DepartmentsAPI {
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiDepartmentsDeleteDepartmentIdDelete(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiDepartmentsDeleteDepartmentIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/Departments/DeleteDepartment/{id}
     - 

     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiDepartmentsDeleteDepartmentIdDeleteWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/api/Departments/DeleteDepartment/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiDepartmentsDepartmentsForDropdownByCostCentreIdGet(_id: Int, completion: @escaping ((_ data: [DepartmentVM]?,_ error: Error?) -> Void)) {
        apiDepartmentsDepartmentsForDropdownByCostCentreIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Departments/DepartmentsForDropdownByCostCentre/{id}
     - 

     - examples: [{contentType=application/json, example=[ {
  "deptName" : "deptName",
  "deptDesc" : "deptDesc",
  "id" : 0
}, {
  "deptName" : "deptName",
  "deptDesc" : "deptDesc",
  "id" : 0
} ]}]
     - parameter _id: (path)  

     - returns: RequestBuilder<[DepartmentVM]> 
     */
    open class func apiDepartmentsDepartmentsForDropdownByCostCentreIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<[DepartmentVM]> {
        var path = "/api/Departments/DepartmentsForDropdownByCostCentre/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[DepartmentVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiDepartmentsDepartmentsForDropdownGet(completion: @escaping ((_ data: [DepartmentVM]?,_ error: Error?) -> Void)) {
        apiDepartmentsDepartmentsForDropdownGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Departments/DepartmentsForDropdown
     - 

     - examples: [{contentType=application/json, example=[ {
  "deptName" : "deptName",
  "deptDesc" : "deptDesc",
  "id" : 0
}, {
  "deptName" : "deptName",
  "deptDesc" : "deptDesc",
  "id" : 0
} ]}]

     - returns: RequestBuilder<[DepartmentVM]> 
     */
    open class func apiDepartmentsDepartmentsForDropdownGetWithRequestBuilder() -> RequestBuilder<[DepartmentVM]> {
        let path = "/api/Departments/DepartmentsForDropdown"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[DepartmentVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiDepartmentsGetDepartmentIdGet(_id: Int, completion: @escaping ((_ data: DepartmentDTO?,_ error: Error?) -> Void)) {
        apiDepartmentsGetDepartmentIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Departments/GetDepartment/{id}
     - 

     - examples: [{contentType=application/json, example={
  "deptName" : "deptName",
  "statusType" : "statusType",
  "costCenterId" : 6,
  "costCenter" : "costCenter",
  "statusTypeId" : 1,
  "id" : 0,
  "deptCode" : "deptCode"
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<DepartmentDTO> 
     */
    open class func apiDepartmentsGetDepartmentIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<DepartmentDTO> {
        var path = "/api/Departments/GetDepartment/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<DepartmentDTO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiDepartmentsGetDepartmentsGet(completion: @escaping ((_ data: [DepartmentDTO]?,_ error: Error?) -> Void)) {
        apiDepartmentsGetDepartmentsGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Departments/GetDepartments
     - 

     - examples: [{contentType=application/json, example=[ {
  "deptName" : "deptName",
  "statusType" : "statusType",
  "costCenterId" : 6,
  "costCenter" : "costCenter",
  "statusTypeId" : 1,
  "id" : 0,
  "deptCode" : "deptCode"
}, {
  "deptName" : "deptName",
  "statusType" : "statusType",
  "costCenterId" : 6,
  "costCenter" : "costCenter",
  "statusTypeId" : 1,
  "id" : 0,
  "deptCode" : "deptCode"
} ]}]

     - returns: RequestBuilder<[DepartmentDTO]> 
     */
    open class func apiDepartmentsGetDepartmentsGetWithRequestBuilder() -> RequestBuilder<[DepartmentDTO]> {
        let path = "/api/Departments/GetDepartments"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[DepartmentDTO]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiDepartmentsPostDepartmentPost(body: DepartmentDTO? = nil, completion: @escaping ((_ data: Department?,_ error: Error?) -> Void)) {
        apiDepartmentsPostDepartmentPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/Departments/PostDepartment
     - 

     - examples: [{contentType=application/json, example={
  "deptName" : "deptName",
  "costCenterId" : 3,
  "costCenter" : {
    "costCenterCode" : "costCenterCode",
    "statusType" : {
      "id" : 7,
      "status" : "status"
    },
    "statusTypeId" : 9,
    "id" : 2,
    "costCenterDesc" : "costCenterDesc"
  },
  "statusTypeId" : 2,
  "id" : 5,
  "deptCode" : "deptCode"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Department> 
     */
    open class func apiDepartmentsPostDepartmentPostWithRequestBuilder(body: DepartmentDTO? = nil) -> RequestBuilder<Department> {
        let path = "/api/Departments/PostDepartment"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Department>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiDepartmentsPutDepartmentIdPut(_id: Int, body: DepartmentDTO? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiDepartmentsPutDepartmentIdPutWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/Departments/PutDepartment/{id}
     - 

     - parameter _id: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiDepartmentsPutDepartmentIdPutWithRequestBuilder(_id: Int, body: DepartmentDTO? = nil) -> RequestBuilder<Void> {
        var path = "/api/Departments/PutDepartment/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
