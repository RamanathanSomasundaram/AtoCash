//
// CurrencyTypesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class CurrencyTypesAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiCurrencyTypesCurrencyTypesForDropdownGet(completion: @escaping ((_ data: [CurrencyTypeVM]?,_ error: Error?) -> Void)) {
        apiCurrencyTypesCurrencyTypesForDropdownGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/CurrencyTypes/CurrencyTypesForDropdown
     - 

     - examples: [{contentType=application/json, example=[ {
  "id" : 0,
  "currencyCode" : "currencyCode"
}, {
  "id" : 0,
  "currencyCode" : "currencyCode"
} ]}]

     - returns: RequestBuilder<[CurrencyTypeVM]> 
     */
    open class func apiCurrencyTypesCurrencyTypesForDropdownGetWithRequestBuilder() -> RequestBuilder<[CurrencyTypeVM]> {
        let path = "/api/CurrencyTypes/CurrencyTypesForDropdown"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[CurrencyTypeVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiCurrencyTypesDeleteCurrencyTypeIdDelete(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiCurrencyTypesDeleteCurrencyTypeIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/CurrencyTypes/DeleteCurrencyType/{id}
     - 

     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiCurrencyTypesDeleteCurrencyTypeIdDeleteWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/api/CurrencyTypes/DeleteCurrencyType/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiCurrencyTypesGetCurrencyTypeIdGet(_id: Int, completion: @escaping ((_ data: CurrencyTypeDTO?,_ error: Error?) -> Void)) {
        apiCurrencyTypesGetCurrencyTypeIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/CurrencyTypes/GetCurrencyType/{id}
     - 

     - examples: [{contentType=application/json, example={
  "country" : "country",
  "currencyName" : "currencyName",
  "statusTypeId" : 6,
  "id" : 0,
  "currencyCode" : "currencyCode"
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<CurrencyTypeDTO> 
     */
    open class func apiCurrencyTypesGetCurrencyTypeIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<CurrencyTypeDTO> {
        var path = "/api/CurrencyTypes/GetCurrencyType/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CurrencyTypeDTO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiCurrencyTypesGetCurrencyTypesGet(completion: @escaping ((_ data: [CurrencyTypeDTO]?,_ error: Error?) -> Void)) {
        apiCurrencyTypesGetCurrencyTypesGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/CurrencyTypes/GetCurrencyTypes
     - 

     - examples: [{contentType=application/json, example=[ {
  "country" : "country",
  "currencyName" : "currencyName",
  "statusTypeId" : 6,
  "id" : 0,
  "currencyCode" : "currencyCode"
}, {
  "country" : "country",
  "currencyName" : "currencyName",
  "statusTypeId" : 6,
  "id" : 0,
  "currencyCode" : "currencyCode"
} ]}]

     - returns: RequestBuilder<[CurrencyTypeDTO]> 
     */
    open class func apiCurrencyTypesGetCurrencyTypesGetWithRequestBuilder() -> RequestBuilder<[CurrencyTypeDTO]> {
        let path = "/api/CurrencyTypes/GetCurrencyTypes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[CurrencyTypeDTO]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiCurrencyTypesPostCurrencyTypePost(body: CurrencyTypeDTO? = nil, completion: @escaping ((_ data: CurrencyType?,_ error: Error?) -> Void)) {
        apiCurrencyTypesPostCurrencyTypePostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/CurrencyTypes/PostCurrencyType
     - 

     - examples: [{contentType=application/json, example={
  "country" : "country",
  "currencyName" : "currencyName",
  "statusTypeId" : 1,
  "id" : 1,
  "currencyCode" : "currencyCode"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<CurrencyType> 
     */
    open class func apiCurrencyTypesPostCurrencyTypePostWithRequestBuilder(body: CurrencyTypeDTO? = nil) -> RequestBuilder<CurrencyType> {
        let path = "/api/CurrencyTypes/PostCurrencyType"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<CurrencyType>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiCurrencyTypesPutCurrencyTypeIdPut(_id: Int, body: CurrencyTypeDTO? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiCurrencyTypesPutCurrencyTypeIdPutWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/CurrencyTypes/PutCurrencyType/{id}
     - 

     - parameter _id: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiCurrencyTypesPutCurrencyTypeIdPutWithRequestBuilder(_id: Int, body: CurrencyTypeDTO? = nil) -> RequestBuilder<Void> {
        var path = "/api/CurrencyTypes/PutCurrencyType/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
