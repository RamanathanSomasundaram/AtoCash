//
// ApprovalRoleMapsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class ApprovalRoleMapsAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiApprovalRoleMapsGet(completion: @escaping ((_ data: [ApprovalRoleMapDTO]?,_ error: Error?) -> Void)) {
        apiApprovalRoleMapsGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/ApprovalRoleMaps
     - 

     - examples: [{contentType=application/json, example=[ {
  "approvalLevelId" : 5,
  "approvalGroup" : "approvalGroup",
  "employeeName" : "employeeName",
  "role" : "role",
  "roleId" : 1,
  "approvalGroupId" : 6,
  "id" : 0,
  "approvalLevel" : 5
}, {
  "approvalLevelId" : 5,
  "approvalGroup" : "approvalGroup",
  "employeeName" : "employeeName",
  "role" : "role",
  "roleId" : 1,
  "approvalGroupId" : 6,
  "id" : 0,
  "approvalLevel" : 5
} ]}]

     - returns: RequestBuilder<[ApprovalRoleMapDTO]> 
     */
    open class func apiApprovalRoleMapsGetWithRequestBuilder() -> RequestBuilder<[ApprovalRoleMapDTO]> {
        let path = "/api/ApprovalRoleMaps"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[ApprovalRoleMapDTO]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiApprovalRoleMapsIdDelete(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiApprovalRoleMapsIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/ApprovalRoleMaps/{id}
     - 

     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiApprovalRoleMapsIdDeleteWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/api/ApprovalRoleMaps/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiApprovalRoleMapsIdGet(_id: Int, completion: @escaping ((_ data: ApprovalRoleMapDTO?,_ error: Error?) -> Void)) {
        apiApprovalRoleMapsIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/ApprovalRoleMaps/{id}
     - 

     - examples: [{contentType=application/json, example={
  "approvalLevelId" : 5,
  "approvalGroup" : "approvalGroup",
  "employeeName" : "employeeName",
  "role" : "role",
  "roleId" : 1,
  "approvalGroupId" : 6,
  "id" : 0,
  "approvalLevel" : 5
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<ApprovalRoleMapDTO> 
     */
    open class func apiApprovalRoleMapsIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<ApprovalRoleMapDTO> {
        var path = "/api/ApprovalRoleMaps/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ApprovalRoleMapDTO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiApprovalRoleMapsIdPut(_id: Int, body: ApprovalRoleMapDTO? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiApprovalRoleMapsIdPutWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/ApprovalRoleMaps/{id}
     - 

     - parameter _id: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiApprovalRoleMapsIdPutWithRequestBuilder(_id: Int, body: ApprovalRoleMapDTO? = nil) -> RequestBuilder<Void> {
        var path = "/api/ApprovalRoleMaps/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiApprovalRoleMapsPost(body: ApprovalRoleMapDTO? = nil, completion: @escaping ((_ data: ApprovalRoleMap?,_ error: Error?) -> Void)) {
        apiApprovalRoleMapsPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/ApprovalRoleMaps
     - 

     - examples: [{contentType=application/json, example={
  "approvalLevelId" : 2,
  "approvalGroup" : {
    "approvalGroupDesc" : "approvalGroupDesc",
    "approvalGroupCode" : "approvalGroupCode",
    "id" : 0
  },
  "roleId" : 5,
  "approvalGroupId" : 6,
  "jobRole" : {
    "roleCode" : "roleCode",
    "roleName" : "roleName",
    "id" : 1,
    "maxPettyCashAllowed" : 5.962133916683182
  },
  "id" : 0,
  "approvalLevel" : {
    "level" : 6,
    "levelDesc" : "levelDesc",
    "id" : 0
  }
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<ApprovalRoleMap> 
     */
    open class func apiApprovalRoleMapsPostWithRequestBuilder(body: ApprovalRoleMapDTO? = nil) -> RequestBuilder<ApprovalRoleMap> {
        let path = "/api/ApprovalRoleMaps"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<ApprovalRoleMap>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
