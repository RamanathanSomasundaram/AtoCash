//
// AccountAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class AccountAPI {
    /**

     - parameter userid: (query)  (optional)
     - parameter token: (query)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAccountConfirmEmailGet(userid: String? = nil, token: String? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAccountConfirmEmailGetWithRequestBuilder(userid: userid, token: token).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - GET /api/Account/ConfirmEmail
     - 

     - parameter userid: (query)  (optional)
     - parameter token: (query)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAccountConfirmEmailGetWithRequestBuilder(userid: String? = nil, token: String? = nil) -> RequestBuilder<Void> {
        let path = "/api/Account/ConfirmEmail"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "userid": userid, 
                        "token": token
        ])


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAccountForgotPasswordPost(body: ForgotPasswordVM? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAccountForgotPasswordPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /api/Account/ForgotPassword
     - 

     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAccountForgotPasswordPostWithRequestBuilder(body: ForgotPasswordVM? = nil) -> RequestBuilder<Void> {
        let path = "/api/Account/ForgotPassword"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAccountLoginPost(body: LoginModel? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAccountLoginPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /api/Account/Login
     - 

     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAccountLoginPostWithRequestBuilder(body: LoginModel? = nil) -> RequestBuilder<Void> {
        let path = "/api/Account/Login"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAccountRegisterPost(body: RegisterModel? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAccountRegisterPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /api/Account/Register
     - 

     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAccountRegisterPostWithRequestBuilder(body: RegisterModel? = nil) -> RequestBuilder<Void> {
        let path = "/api/Account/Register"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiAccountResetPasswordPost(body: ResetPasswordVM? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiAccountResetPasswordPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - POST /api/Account/ResetPassword
     - 

     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiAccountResetPasswordPostWithRequestBuilder(body: ResetPasswordVM? = nil) -> RequestBuilder<Void> {
        let path = "/api/Account/ResetPassword"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
