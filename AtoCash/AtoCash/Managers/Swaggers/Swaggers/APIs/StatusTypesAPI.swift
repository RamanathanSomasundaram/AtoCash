//
// StatusTypesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class StatusTypesAPI {
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiStatusTypesDeleteStatusTypeIdDelete(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiStatusTypesDeleteStatusTypeIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/StatusTypes/DeleteStatusType/{id}
     - 

     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiStatusTypesDeleteStatusTypeIdDeleteWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/api/StatusTypes/DeleteStatusType/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiStatusTypesGetStatusTypeIdGet(_id: Int, completion: @escaping ((_ data: StatusType?,_ error: Error?) -> Void)) {
        apiStatusTypesGetStatusTypeIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/StatusTypes/GetStatusType/{id}
     - 

     - examples: [{contentType=application/json, example={
  "id" : 7,
  "status" : "status"
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<StatusType> 
     */
    open class func apiStatusTypesGetStatusTypeIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<StatusType> {
        var path = "/api/StatusTypes/GetStatusType/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<StatusType>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiStatusTypesGetStatusTypesGet(completion: @escaping ((_ data: [StatusType]?,_ error: Error?) -> Void)) {
        apiStatusTypesGetStatusTypesGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/StatusTypes/GetStatusTypes
     - 

     - examples: [{contentType=application/json, example=[ {
  "id" : 7,
  "status" : "status"
}, {
  "id" : 7,
  "status" : "status"
} ]}]

     - returns: RequestBuilder<[StatusType]> 
     */
    open class func apiStatusTypesGetStatusTypesGetWithRequestBuilder() -> RequestBuilder<[StatusType]> {
        let path = "/api/StatusTypes/GetStatusTypes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[StatusType]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiStatusTypesPostStatusTypePost(body: StatusType? = nil, completion: @escaping ((_ data: StatusType?,_ error: Error?) -> Void)) {
        apiStatusTypesPostStatusTypePostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/StatusTypes/PostStatusType
     - 

     - examples: [{contentType=application/json, example={
  "id" : 7,
  "status" : "status"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<StatusType> 
     */
    open class func apiStatusTypesPostStatusTypePostWithRequestBuilder(body: StatusType? = nil) -> RequestBuilder<StatusType> {
        let path = "/api/StatusTypes/PostStatusType"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<StatusType>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiStatusTypesPutStatusTypeIdPut(_id: Int, body: StatusType? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiStatusTypesPutStatusTypeIdPutWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/StatusTypes/PutStatusType/{id}
     - 

     - parameter _id: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiStatusTypesPutStatusTypeIdPutWithRequestBuilder(_id: Int, body: StatusType? = nil) -> RequestBuilder<Void> {
        var path = "/api/StatusTypes/PutStatusType/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiStatusTypesStatusTypesForDropdownGet(completion: @escaping ((_ data: [StatusTypeVM]?,_ error: Error?) -> Void)) {
        apiStatusTypesStatusTypesForDropdownGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/StatusTypes/StatusTypesForDropdown
     - 

     - examples: [{contentType=application/json, example=[ {
  "id" : 0,
  "status" : "status"
}, {
  "id" : 0,
  "status" : "status"
} ]}]

     - returns: RequestBuilder<[StatusTypeVM]> 
     */
    open class func apiStatusTypesStatusTypesForDropdownGetWithRequestBuilder() -> RequestBuilder<[StatusTypeVM]> {
        let path = "/api/StatusTypes/StatusTypesForDropdown"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[StatusTypeVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
