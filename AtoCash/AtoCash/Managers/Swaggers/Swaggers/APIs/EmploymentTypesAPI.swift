//
// EmploymentTypesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class EmploymentTypesAPI {
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmploymentTypesGet(completion: @escaping ((_ data: [EmploymentType]?,_ error: Error?) -> Void)) {
        apiEmploymentTypesGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/EmploymentTypes
     - 

     - examples: [{contentType=application/json, example=[ {
  "empJobTypeCode" : "empJobTypeCode",
  "id" : 1,
  "empJobTypeDesc" : "empJobTypeDesc"
}, {
  "empJobTypeCode" : "empJobTypeCode",
  "id" : 1,
  "empJobTypeDesc" : "empJobTypeDesc"
} ]}]

     - returns: RequestBuilder<[EmploymentType]> 
     */
    open class func apiEmploymentTypesGetWithRequestBuilder() -> RequestBuilder<[EmploymentType]> {
        let path = "/api/EmploymentTypes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[EmploymentType]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmploymentTypesIdDelete(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiEmploymentTypesIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/EmploymentTypes/{id}
     - 

     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiEmploymentTypesIdDeleteWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/api/EmploymentTypes/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmploymentTypesIdGet(_id: Int, completion: @escaping ((_ data: EmploymentType?,_ error: Error?) -> Void)) {
        apiEmploymentTypesIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/EmploymentTypes/{id}
     - 

     - examples: [{contentType=application/json, example={
  "empJobTypeCode" : "empJobTypeCode",
  "id" : 1,
  "empJobTypeDesc" : "empJobTypeDesc"
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<EmploymentType> 
     */
    open class func apiEmploymentTypesIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<EmploymentType> {
        var path = "/api/EmploymentTypes/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EmploymentType>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmploymentTypesIdPut(_id: Int, body: EmploymentTypeDTO? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiEmploymentTypesIdPutWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/EmploymentTypes/{id}
     - 

     - parameter _id: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiEmploymentTypesIdPutWithRequestBuilder(_id: Int, body: EmploymentTypeDTO? = nil) -> RequestBuilder<Void> {
        var path = "/api/EmploymentTypes/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmploymentTypesPost(body: EmploymentType? = nil, completion: @escaping ((_ data: EmploymentType?,_ error: Error?) -> Void)) {
        apiEmploymentTypesPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/EmploymentTypes
     - 

     - examples: [{contentType=application/json, example={
  "empJobTypeCode" : "empJobTypeCode",
  "id" : 1,
  "empJobTypeDesc" : "empJobTypeDesc"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<EmploymentType> 
     */
    open class func apiEmploymentTypesPostWithRequestBuilder(body: EmploymentType? = nil) -> RequestBuilder<EmploymentType> {
        let path = "/api/EmploymentTypes"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EmploymentType>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
