//
// EmployeesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class EmployeesAPI {
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmployeesDeleteEmployeeIdDelete(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiEmployeesDeleteEmployeeIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/Employees/DeleteEmployee/{id}
     - 

     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiEmployeesDeleteEmployeeIdDeleteWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/api/Employees/DeleteEmployee/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmployeesEmployeesForDropdownGet(completion: @escaping ((_ data: [EmployeeVM]?,_ error: Error?) -> Void)) {
        apiEmployeesEmployeesForDropdownGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Employees/EmployeesForDropdown
     - 

     - examples: [{contentType=application/json, example=[ {
  "fullName" : "fullName",
  "id" : 0,
  "email" : "email"
}, {
  "fullName" : "fullName",
  "id" : 0,
  "email" : "email"
} ]}]

     - returns: RequestBuilder<[EmployeeVM]> 
     */
    open class func apiEmployeesEmployeesForDropdownGetWithRequestBuilder() -> RequestBuilder<[EmployeeVM]> {
        let path = "/api/Employees/EmployeesForDropdown"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[EmployeeVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmployeesGetEmployeeIdGet(_id: Int, completion: @escaping ((_ data: EmployeeDTO?,_ error: Error?) -> Void)) {
        apiEmployeesGetEmployeeIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Employees/GetEmployee/{id}
     - 

     - examples: [{contentType=application/json, example={
  "lastName" : "lastName",
  "approvalGroup" : "approvalGroup",
  "gender" : "gender",
  "statusType" : "statusType",
  "mobileNumber" : "mobileNumber",
  "departmentId" : 1,
  "statusTypeId" : 7,
  "nationalID" : "nationalID",
  "jobRole" : "jobRole",
  "id" : 0,
  "department" : "department",
  "email" : "email",
  "bankAccount" : "bankAccount",
  "passportNo" : "passportNo",
  "bankCardNo" : "bankCardNo",
  "employmentType" : "employmentType",
  "roleId" : 5,
  "fullName" : "fullName",
  "taxNumber" : "taxNumber",
  "currencyTypeId" : 2,
  "firstName" : "firstName",
  "nationality" : "nationality",
  "empCode" : "empCode",
  "employmentTypeId" : 6,
  "dob" : "2000-01-23T04:56:07.000+00:00",
  "approvalGroupId" : 5,
  "middleName" : "middleName",
  "doj" : "2000-01-23T04:56:07.000+00:00"
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<EmployeeDTO> 
     */
    open class func apiEmployeesGetEmployeeIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<EmployeeDTO> {
        var path = "/api/Employees/GetEmployee/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<EmployeeDTO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmployeesGetEmployeesGet(completion: @escaping ((_ data: [EmployeeDTO]?,_ error: Error?) -> Void)) {
        apiEmployeesGetEmployeesGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Employees/GetEmployees
     - 

     - examples: [{contentType=application/json, example=[ {
  "lastName" : "lastName",
  "approvalGroup" : "approvalGroup",
  "gender" : "gender",
  "statusType" : "statusType",
  "mobileNumber" : "mobileNumber",
  "departmentId" : 1,
  "statusTypeId" : 7,
  "nationalID" : "nationalID",
  "jobRole" : "jobRole",
  "id" : 0,
  "department" : "department",
  "email" : "email",
  "bankAccount" : "bankAccount",
  "passportNo" : "passportNo",
  "bankCardNo" : "bankCardNo",
  "employmentType" : "employmentType",
  "roleId" : 5,
  "fullName" : "fullName",
  "taxNumber" : "taxNumber",
  "currencyTypeId" : 2,
  "firstName" : "firstName",
  "nationality" : "nationality",
  "empCode" : "empCode",
  "employmentTypeId" : 6,
  "dob" : "2000-01-23T04:56:07.000+00:00",
  "approvalGroupId" : 5,
  "middleName" : "middleName",
  "doj" : "2000-01-23T04:56:07.000+00:00"
}, {
  "lastName" : "lastName",
  "approvalGroup" : "approvalGroup",
  "gender" : "gender",
  "statusType" : "statusType",
  "mobileNumber" : "mobileNumber",
  "departmentId" : 1,
  "statusTypeId" : 7,
  "nationalID" : "nationalID",
  "jobRole" : "jobRole",
  "id" : 0,
  "department" : "department",
  "email" : "email",
  "bankAccount" : "bankAccount",
  "passportNo" : "passportNo",
  "bankCardNo" : "bankCardNo",
  "employmentType" : "employmentType",
  "roleId" : 5,
  "fullName" : "fullName",
  "taxNumber" : "taxNumber",
  "currencyTypeId" : 2,
  "firstName" : "firstName",
  "nationality" : "nationality",
  "empCode" : "empCode",
  "employmentTypeId" : 6,
  "dob" : "2000-01-23T04:56:07.000+00:00",
  "approvalGroupId" : 5,
  "middleName" : "middleName",
  "doj" : "2000-01-23T04:56:07.000+00:00"
} ]}]

     - returns: RequestBuilder<[EmployeeDTO]> 
     */
    open class func apiEmployeesGetEmployeesGetWithRequestBuilder() -> RequestBuilder<[EmployeeDTO]> {
        let path = "/api/Employees/GetEmployees"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[EmployeeDTO]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmployeesGetReporteesUnderManagerIdGet(_id: Int, completion: @escaping ((_ data: [EmployeeVM]?,_ error: Error?) -> Void)) {
        apiEmployeesGetReporteesUnderManagerIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/Employees/GetReporteesUnderManager/{id}
     - 

     - examples: [{contentType=application/json, example=[ {
  "fullName" : "fullName",
  "id" : 0,
  "email" : "email"
}, {
  "fullName" : "fullName",
  "id" : 0,
  "email" : "email"
} ]}]
     - parameter _id: (path)  

     - returns: RequestBuilder<[EmployeeVM]> 
     */
    open class func apiEmployeesGetReporteesUnderManagerIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<[EmployeeVM]> {
        var path = "/api/Employees/GetReporteesUnderManager/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[EmployeeVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmployeesPostEmployeePost(body: EmployeeDTO? = nil, completion: @escaping ((_ data: Employee?,_ error: Error?) -> Void)) {
        apiEmployeesPostEmployeePostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/Employees/PostEmployee
     - 

     - examples: [{contentType=application/json, example={
  "currencyType" : {
    "country" : "country",
    "currencyName" : "currencyName",
    "statusTypeId" : 1,
    "id" : 1,
    "currencyCode" : "currencyCode"
  },
  "lastName" : "lastName",
  "approvalGroup" : {
    "approvalGroupDesc" : "approvalGroupDesc",
    "approvalGroupCode" : "approvalGroupCode",
    "id" : 0
  },
  "role" : {
    "roleCode" : "roleCode",
    "roleName" : "roleName",
    "id" : 1,
    "maxPettyCashAllowed" : 5.962133916683182
  },
  "gender" : "gender",
  "mobileNumber" : "mobileNumber",
  "departmentId" : 4,
  "statusTypeId" : 7,
  "nationalID" : "nationalID",
  "id" : 6,
  "department" : {
    "deptName" : "deptName",
    "costCenterId" : 3,
    "costCenter" : {
      "costCenterCode" : "costCenterCode",
      "statusType" : {
        "id" : 7,
        "status" : "status"
      },
      "statusTypeId" : 9,
      "id" : 2,
      "costCenterDesc" : "costCenterDesc"
    },
    "statusTypeId" : 2,
    "id" : 5,
    "deptCode" : "deptCode"
  },
  "email" : "",
  "bankAccount" : "bankAccount",
  "passportNo" : "passportNo",
  "bankCardNo" : "bankCardNo",
  "employmentType" : {
    "empJobTypeCode" : "empJobTypeCode",
    "id" : 1,
    "empJobTypeDesc" : "empJobTypeDesc"
  },
  "roleId" : 7,
  "taxNumber" : "taxNumber",
  "currencyTypeId" : 6,
  "firstName" : "firstName",
  "nationality" : "nationality",
  "empCode" : "empCode",
  "employmentTypeId" : 5,
  "dob" : "2000-01-23T04:56:07.000+00:00",
  "approvalGroupId" : 1,
  "middleName" : "middleName",
  "doj" : "2000-01-23T04:56:07.000+00:00"
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Employee> 
     */
    open class func apiEmployeesPostEmployeePostWithRequestBuilder(body: EmployeeDTO? = nil) -> RequestBuilder<Employee> {
        let path = "/api/Employees/PostEmployee"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Employee>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiEmployeesPutEmployeeIdPut(_id: Int, body: EmployeeDTO? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiEmployeesPutEmployeeIdPutWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/Employees/PutEmployee/{id}
     - 

     - parameter _id: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiEmployeesPutEmployeeIdPutWithRequestBuilder(_id: Int, body: EmployeeDTO? = nil) -> RequestBuilder<Void> {
        var path = "/api/Employees/PutEmployee/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
