//
// SubProjectsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class SubProjectsAPI {
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiSubProjectsDeleteSubProjectIdDelete(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiSubProjectsDeleteSubProjectIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/SubProjects/DeleteSubProject/{id}
     - 

     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiSubProjectsDeleteSubProjectIdDeleteWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/api/SubProjects/DeleteSubProject/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiSubProjectsGetSubProjectIdGet(_id: Int, completion: @escaping ((_ data: SubProjectDTO?,_ error: Error?) -> Void)) {
        apiSubProjectsGetSubProjectIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/SubProjects/GetSubProject/{id}
     - 

     - examples: [{contentType=application/json, example={
  "subProjectName" : "subProjectName",
  "subProjectDesc" : "subProjectDesc",
  "id" : 0,
  "projectName" : "projectName",
  "projectId" : 6
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<SubProjectDTO> 
     */
    open class func apiSubProjectsGetSubProjectIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<SubProjectDTO> {
        var path = "/api/SubProjects/GetSubProject/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SubProjectDTO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiSubProjectsGetSubProjectsForProjectsIdGet(_id: Int, completion: @escaping ((_ data: [SubProjectVM]?,_ error: Error?) -> Void)) {
        apiSubProjectsGetSubProjectsForProjectsIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/SubProjects/GetSubProjectsForProjects/{id}
     - 

     - examples: [{contentType=application/json, example=[ {
  "subProjectName" : "subProjectName",
  "id" : 0
}, {
  "subProjectName" : "subProjectName",
  "id" : 0
} ]}]
     - parameter _id: (path)  

     - returns: RequestBuilder<[SubProjectVM]> 
     */
    open class func apiSubProjectsGetSubProjectsForProjectsIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<[SubProjectVM]> {
        var path = "/api/SubProjects/GetSubProjectsForProjects/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[SubProjectVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiSubProjectsGetSubProjectsGet(completion: @escaping ((_ data: [SubProjectDTO]?,_ error: Error?) -> Void)) {
        apiSubProjectsGetSubProjectsGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/SubProjects/GetSubProjects
     - 

     - examples: [{contentType=application/json, example=[ {
  "subProjectName" : "subProjectName",
  "subProjectDesc" : "subProjectDesc",
  "id" : 0,
  "projectName" : "projectName",
  "projectId" : 6
}, {
  "subProjectName" : "subProjectName",
  "subProjectDesc" : "subProjectDesc",
  "id" : 0,
  "projectName" : "projectName",
  "projectId" : 6
} ]}]

     - returns: RequestBuilder<[SubProjectDTO]> 
     */
    open class func apiSubProjectsGetSubProjectsGetWithRequestBuilder() -> RequestBuilder<[SubProjectDTO]> {
        let path = "/api/SubProjects/GetSubProjects"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[SubProjectDTO]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiSubProjectsPostSubProjectPost(body: SubProjectDTO? = nil, completion: @escaping ((_ data: SubProject?,_ error: Error?) -> Void)) {
        apiSubProjectsPostSubProjectPostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/SubProjects/PostSubProject
     - 

     - examples: [{contentType=application/json, example={
  "subProjectName" : "subProjectName",
  "subProjectDesc" : "subProjectDesc",
  "id" : 1,
  "projectId" : 2
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<SubProject> 
     */
    open class func apiSubProjectsPostSubProjectPostWithRequestBuilder(body: SubProjectDTO? = nil) -> RequestBuilder<SubProject> {
        let path = "/api/SubProjects/PostSubProject"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<SubProject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiSubProjectsPutSubProjectIdPut(_id: Int, body: SubProjectDTO? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiSubProjectsPutSubProjectIdPutWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/SubProjects/PutSubProject/{id}
     - 

     - parameter _id: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiSubProjectsPutSubProjectIdPutWithRequestBuilder(_id: Int, body: SubProjectDTO? = nil) -> RequestBuilder<Void> {
        var path = "/api/SubProjects/PutSubProject/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiSubProjectsSubProjectsForDropdownGet(completion: @escaping ((_ data: [SubProjectVM]?,_ error: Error?) -> Void)) {
        apiSubProjectsSubProjectsForDropdownGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/SubProjects/SubProjectsForDropdown
     - 

     - examples: [{contentType=application/json, example=[ {
  "subProjectName" : "subProjectName",
  "id" : 0
}, {
  "subProjectName" : "subProjectName",
  "id" : 0
} ]}]

     - returns: RequestBuilder<[SubProjectVM]> 
     */
    open class func apiSubProjectsSubProjectsForDropdownGetWithRequestBuilder() -> RequestBuilder<[SubProjectVM]> {
        let path = "/api/SubProjects/SubProjectsForDropdown"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[SubProjectVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
}
