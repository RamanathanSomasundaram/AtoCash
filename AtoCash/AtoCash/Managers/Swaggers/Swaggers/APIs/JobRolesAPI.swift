//
// JobRolesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire


open class JobRolesAPI {
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiJobRolesDeleteRoleIdDelete(_id: Int, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiJobRolesDeleteRoleIdDeleteWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - DELETE /api/JobRoles/DeleteRole/{id}
     - 

     - parameter _id: (path)  

     - returns: RequestBuilder<Void> 
     */
    open class func apiJobRolesDeleteRoleIdDeleteWithRequestBuilder(_id: Int) -> RequestBuilder<Void> {
        var path = "/api/JobRoles/DeleteRole/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "DELETE", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter _id: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiJobRolesGetRoleIdGet(_id: Int, completion: @escaping ((_ data: JobRole?,_ error: Error?) -> Void)) {
        apiJobRolesGetRoleIdGetWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/JobRoles/GetRole/{id}
     - 

     - examples: [{contentType=application/json, example={
  "roleCode" : "roleCode",
  "roleName" : "roleName",
  "id" : 1,
  "maxPettyCashAllowed" : 5.962133916683182
}}]
     - parameter _id: (path)  

     - returns: RequestBuilder<JobRole> 
     */
    open class func apiJobRolesGetRoleIdGetWithRequestBuilder(_id: Int) -> RequestBuilder<JobRole> {
        var path = "/api/JobRoles/GetRole/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<JobRole>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiJobRolesGetRolesGet(completion: @escaping ((_ data: [JobRole]?,_ error: Error?) -> Void)) {
        apiJobRolesGetRolesGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/JobRoles/GetRoles
     - 

     - examples: [{contentType=application/json, example=[ {
  "roleCode" : "roleCode",
  "roleName" : "roleName",
  "id" : 1,
  "maxPettyCashAllowed" : 5.962133916683182
}, {
  "roleCode" : "roleCode",
  "roleName" : "roleName",
  "id" : 1,
  "maxPettyCashAllowed" : 5.962133916683182
} ]}]

     - returns: RequestBuilder<[JobRole]> 
     */
    open class func apiJobRolesGetRolesGetWithRequestBuilder() -> RequestBuilder<[JobRole]> {
        let path = "/api/JobRoles/GetRoles"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[JobRole]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiJobRolesJobRolesForDropdownGet(completion: @escaping ((_ data: [JobRoleVM]?,_ error: Error?) -> Void)) {
        apiJobRolesJobRolesForDropdownGetWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - GET /api/JobRoles/JobRolesForDropdown
     - 

     - examples: [{contentType=application/json, example=[ {
  "roleCode" : "roleCode",
  "id" : 0
}, {
  "roleCode" : "roleCode",
  "id" : 0
} ]}]

     - returns: RequestBuilder<[JobRoleVM]> 
     */
    open class func apiJobRolesJobRolesForDropdownGetWithRequestBuilder() -> RequestBuilder<[JobRoleVM]> {
        let path = "/api/JobRoles/JobRolesForDropdown"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<[JobRoleVM]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }
    /**

     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiJobRolesPostRolePost(body: JobRole? = nil, completion: @escaping ((_ data: JobRole?,_ error: Error?) -> Void)) {
        apiJobRolesPostRolePostWithRequestBuilder(body: body).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     - POST /api/JobRoles/PostRole
     - 

     - examples: [{contentType=application/json, example={
  "roleCode" : "roleCode",
  "roleName" : "roleName",
  "id" : 1,
  "maxPettyCashAllowed" : 5.962133916683182
}}]
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<JobRole> 
     */
    open class func apiJobRolesPostRolePostWithRequestBuilder(body: JobRole? = nil) -> RequestBuilder<JobRole> {
        let path = "/api/JobRoles/PostRole"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<JobRole>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
    /**

     - parameter _id: (path)  
     - parameter body: (body)  (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func apiJobRolesPutRoleIdPut(_id: Int, body: JobRoleDTO? = nil, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        apiJobRolesPutRoleIdPutWithRequestBuilder(_id: _id, body: body).execute { (response, error) -> Void in
            if error == nil {
                completion((), error)
            } else {
                completion(nil, error)
            }
        }
    }


    /**
     - PUT /api/JobRoles/PutRole/{id}
     - 

     - parameter _id: (path)  
     - parameter body: (body)  (optional)

     - returns: RequestBuilder<Void> 
     */
    open class func apiJobRolesPutRoleIdPutWithRequestBuilder(_id: Int, body: JobRoleDTO? = nil) -> RequestBuilder<Void> {
        var path = "/api/JobRoles/PutRole/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)
        let url = URLComponents(string: URLString)


        let requestBuilder: RequestBuilder<Void>.Type = SwaggerClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "PUT", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }
}
